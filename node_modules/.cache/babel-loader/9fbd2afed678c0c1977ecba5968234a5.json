{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusmantovani/code/frexco/carrinho-de-compras/src/services/Api.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Api = () => {\n  _s();\n\n  //useState\n  const [vetor, setVetor] = useState([]); //useEffect\n\n  useEffect(() => {\n    obterDados();\n  }); //Função para obter os dados da API\n\n  const obterDados = async () => {\n    const dados = await fetch(\"/api/fruit/all\");\n    const converter = await dados.json();\n    setVetor(converter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: vetor.map((_ref, _ref2, index) => {\n        let {\n          name\n        } = _ref;\n        let {\n          family\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [family, \" \", name]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Api, \"Kmqqj+WOMt1xJPoPIgz5kC47F04=\");\n\n_c = Api;\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"names":["React","useState","useEffect","Api","vetor","setVetor","obterDados","dados","fetch","converter","json","map","index","name","family"],"sources":["/Users/viniciusmantovani/code/frexco/carrinho-de-compras/src/services/Api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Api = () => {\n  //useState\n  const [vetor, setVetor] = useState([]);\n\n  //useEffect\n  useEffect(() => {\n    obterDados();\n  });\n\n  //Função para obter os dados da API\n  const obterDados = async () => {\n    const dados = await fetch(\"/api/fruit/all\");\n    const converter = await dados.json();\n    setVetor(converter);\n  };\n\n  return (\n    <div>\n      <ul>\n        {vetor.map(({ name }, { family }, index) => (\n          <li key={index}>\n            {family} {name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Api;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAIhB;;EACAC,SAAS,CAAC,MAAM;IACdI,UAAU;EACX,CAFQ,CAAT,CALgB,CAShB;;EACA,MAAMA,UAAU,GAAG,YAAY;IAC7B,MAAMC,KAAK,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAAzB;IACA,MAAMC,SAAS,GAAG,MAAMF,KAAK,CAACG,IAAN,EAAxB;IACAL,QAAQ,CAACI,SAAD,CAAR;EACD,CAJD;;EAMA,oBACE;IAAA,uBACE;MAAA,UACGL,KAAK,CAACO,GAAN,CAAU,cAAuBC,KAAvB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,IAAW;UAAEC;QAAF,CAAX;QAAA,oBACT;UAAA,WACGA,MADH,OACYD,IADZ;QAAA,GAASD,KAAT;UAAA;UAAA;UAAA;QAAA,QADS;MAAA,CAAV;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA3BD;;GAAMT,G;;KAAAA,G;AA6BN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}